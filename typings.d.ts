// Generated by dts-bundle v0.7.3

declare module '@soteen/bela' {
    /** Typing for index.ts **/
    import Configuration from "@soteen/bela/Configuration";
    import ConversationDataset from "@soteen/bela/ConversationDataset";
    import ImageDataset from "@soteen/bela/ImageDataset";
    import PredictTextOption from "@soteen/bela/PredictTextOption";
    import PredictImageOption from "@soteen/bela/PredictImageOption";
    import SaveOption from "@soteen/bela/SaveOption";
    import LoadOption from "@soteen/bela/LoadOption";
    import FromOption from "@soteen/bela/FromOption";
    import ToOption from "@soteen/bela/ToOption";
    import ReadOption from "@soteen/bela/ReadOption";
    
    class BELA {
        constructor(config: Configuration = {}) {}
    
        train(dataset: (ConversationDataset | ImageDataset)[]): void {}
        fineTune(dataset: (ConversationDataset | ImageDataset)[]): void {}
        predict(prompt: string, options: PredictOption): string {}
        save(name: string, options: SaveOption): void {}
        load(name: string, options: LoadOption): void {}
        move(from: string, fromOptions: FromOption, to: string, toOptions: ToOption): void {}
        read(name: string, options: ReadOption): ModelData {}
    }
    export = BELA;
    export { BELA };
}

declare module '@soteen/bela/Configuration' {
    global {
        import Parameter from "@soteen/bela/Parameter";
        import Path from "@soteen/bela/Path.";
    
        interface Configuration {
            parameter?: Parameter;
            path?: Path;
            autoIncrement?: boolean;
            autoDelete?: boolean;
            autoDeleteMax?: number;
        }
    }
    
    export {};
}

declare module '@soteen/bela/ConversationDataset' {
    global {
        interface ConversationDataset {
            input: string;
            output: string;
        }
    }
    
    export {};
}

declare module '@soteen/bela/ImageDataset' {
    global {
        interface ImageDataset {
            title: string;
            image: number[][][];
        }
    }
    
    export {};
}

declare module '@soteen/bela/PredictTextOption' {
    global {
        interface PredictTextOption {
            minLength: number;
            maxLength: number;
            maxTest: number;
            logTest: boolean;
        }
    }
    
    export {};
}

declare module '@soteen/bela/PredictImageOption' {
    global {
        interface PredictImageOption {
            width: number;
            height: number;
            maxTest: number;
            logTest: boolean;
        }
    }
    
    export {};
}

declare module '@soteen/bela/SaveOption' {
    interface SaveOption {
        password: string;
        metadata?: Metadata;
    }
}

declare module '@soteen/bela/LoadOption' {
    interface LoadOption {
        password: string;
    }
}

declare module '@soteen/bela/FromOption' {
    global {
        interface FromOption {
            password: string;
        }
    }
    
    export {};
}

declare module '@soteen/bela/ToOption' {
    interface ToOption {
        password: string;
    }
}

declare module '@soteen/bela/ReadOption' {
    interface ReadOption {
        password: string;
    }
}

declare module '@soteen/bela/Parameter' {
    interface Parameter {
        epochs?: number;
        learningRate?: number;
        momentum?: number;
        randomness?: number;
        nGramOrder?: number;
        layers?: number[];
    }
}

declare module '@soteen/bela/Path.' {
    interface Path {
        root?: string;
        model?: string;
        backup?: string;
    }
}

